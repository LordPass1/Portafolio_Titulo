#include <DHT.h>

// --- Parámetros del DHT11 ---
#define DHTPIN    4     // Pin digital donde está conectado Data del DHT11
#define DHTTYPE   DHT11 // Modelo de sensor (DHT11)

DHT dht(DHTPIN, DHTTYPE);

// --- Pines de los sensores de humedad capacitiva ---
const int MOIST_PIN1 = A0;  // Sensor de humedad #1 → A0
const int MOIST_PIN2 = A1;  // Sensor de humedad #2 → A1

// Intervalo de tiempo entre lecturas (en milisegundos)
const unsigned long INTERVALO_LECTURA = 2000;
unsigned long tiempoAnterior = 0;

void setup() {
  // Inicia puerto serie a 115200 bps
  Serial.begin(115200);
  while (!Serial) { ; }
  Serial.println(F("Inicializando Arduino MKR1000"));

  // Inicializa DHT11
  dht.begin();

  // Configura pines analógicos
  pinMode(MOIST_PIN1, INPUT);
  pinMode(MOIST_PIN2, INPUT);
}

void loop() {
  unsigned long tiempoActual = millis();
  if (tiempoActual - tiempoAnterior >= INTERVALO_LECTURA) {
    tiempoAnterior = tiempoActual;

    // 1) Leer sensores de humedad
    int valMoist1 = analogRead(MOIST_PIN1); // Rango 0..1023
    int valMoist2 = analogRead(MOIST_PIN2);

    // 2) Leer DHT11
    float h = dht.readHumidity();
    float t = dht.readTemperature();

    // Verificar errores de DHT11
    if (isnan(h) || isnan(t)) {
      Serial.println(F("Error al leer DHT11"));
    } else {
      // 3) Mostrar resultados por Serial Monitor
      Serial.print(F("Humedad1 (A0): "));
      Serial.print(valMoist1);
      Serial.print(F("  |  Humedad2 (A1): "));
      Serial.print(valMoist2);
      Serial.print(F("  ||  Temp (°C): "));
      Serial.print(t);
      Serial.print(F("  |  HumedadRel (%): "));
      Serial.println(h);
    }

    // Aquí podrías añadir:
    //   • Lógica para enviar datos vía Wi-Fi usando la biblioteca WiFi101 (incluida en MKR1000).
    //   • Enviar a un servidor HTTP/MQTT/etc.
  }
}
